# Generated by Django 5.1.6 on 2025-10-06 06:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Crop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("season", models.CharField(max_length=100)),
                ("crop", models.CharField(max_length=100)),
                ("stage", models.CharField(max_length=100)),
                ("period", models.CharField(max_length=100)),
                ("crop_factor", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                ("state_code", models.IntegerField(primary_key=True, serialize=False)),
                ("state_name", models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "district_code",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("district_name", models.CharField(max_length=40)),
                (
                    "state_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gwa.state"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subdistrict",
            fields=[
                (
                    "subdistrict_code",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("subdistrict_name", models.CharField(max_length=40)),
                (
                    "district_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="gwa.district"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Village",
            fields=[
                (
                    "village_code",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("village_name", models.CharField(max_length=100)),
                ("population_2011", models.IntegerField()),
                (
                    "subdistrict_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gwa.subdistrict",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Well",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("FID_clip", models.IntegerField(unique=True)),
                ("OBJECTID", models.IntegerField()),
                ("shapeName", models.CharField(blank=True, max_length=100, null=True)),
                ("SUB_DISTRI", models.CharField(blank=True, max_length=100, null=True)),
                ("DISTRICT_C", models.IntegerField(blank=True, null=True)),
                ("DISTRICT", models.CharField(blank=True, max_length=100, null=True)),
                ("STATE_CODE", models.IntegerField(blank=True, null=True)),
                ("STATE", models.CharField(blank=True, max_length=100, null=True)),
                ("population", models.IntegerField(blank=True, null=True)),
                ("SUBDIS_COD", models.IntegerField(blank=True, null=True)),
                ("Area", models.FloatField(blank=True, null=True)),
                ("DISTRICT_1", models.CharField(blank=True, max_length=100, null=True)),
                ("BLOCK", models.CharField(blank=True, max_length=100, null=True)),
                ("HYDROGRAPH", models.CharField(blank=True, max_length=100, null=True)),
                ("LONGITUDE", models.FloatField(blank=True, null=True)),
                ("LATITUDE", models.FloatField(blank=True, null=True)),
                ("RL", models.FloatField(blank=True, null=True)),
                ("PRE_2011", models.FloatField(blank=True, null=True)),
                ("POST_2011", models.FloatField(blank=True, null=True)),
                ("PRE_2012", models.FloatField(blank=True, null=True)),
                ("POST_2012", models.FloatField(blank=True, null=True)),
                ("PRE_2013", models.FloatField(blank=True, null=True)),
                ("POST_2013", models.FloatField(blank=True, null=True)),
                ("PRE_2014", models.FloatField(blank=True, null=True)),
                ("POST_2014", models.FloatField(blank=True, null=True)),
                ("PRE_2015", models.FloatField(blank=True, null=True)),
                ("POST_2015", models.FloatField(blank=True, null=True)),
                ("PRE_2016", models.FloatField(blank=True, null=True)),
                ("POST_2016", models.FloatField(blank=True, null=True)),
                ("PRE_2017", models.FloatField(blank=True, null=True)),
                ("POST_2017", models.FloatField(blank=True, null=True)),
                ("PRE_2018", models.FloatField(blank=True, null=True)),
                ("POST_2018", models.FloatField(blank=True, null=True)),
                ("PRE_2019", models.FloatField(blank=True, null=True)),
                ("POST_2019", models.FloatField(blank=True, null=True)),
                ("PRE_2020", models.FloatField(blank=True, null=True)),
                ("POST_2020", models.FloatField(blank=True, null=True)),
                (
                    "village_code",
                    models.ForeignKey(
                        db_column="village_code",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gwa.village",
                    ),
                ),
            ],
        ),
    ]
