
services:
  # frontend:
  #   build:
  #     context: ./frontend/
  #     dockerfile: dockerfile.frontend 
  #   image: frontend:latest
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/home/app:z
  #   depends_on:
  #     - fast_backend
  #     - geoserver
  #   command: npm start


  backend:
    build:
      context: ./backend/
      dockerfile: docker/dockerfile.backend
    image: backend:latest
    ports:
      - "9000:9000"
    env_file:
      - .env
    volumes:
      - ./backend:/home/app:z
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:9000"
    restart: always
    depends_on:
      - db
      - geoserver

  fast_backend:
    build:
      context: ./fast_backend
      dockerfile: Dockerfile
    image: backend_fast:latest
    ports:
      - "7000:7000"
    env_file:
      - .fastdb.env
    volumes:
      - ./fast_backend:/home/app:z
    #command: gunicorn app.main:app --config gunicorn.conf.py --reload
    command: uvicorn app.main:app --host 0.0.0.0 --port 7000 --reload
    restart: always
    depends_on:
      - fast_db
      - geoserver

  db:
    image: postgres:16
    ports:
      - "5440:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    depends_on:
      - redis
      - geoserver

  fast_db:
    image: postgres:16
    ports:
      - "5450:5432"
    env_file:
      - .fastdb.env
    volumes:
      - postgres_cloud_data:/var/lib/postgresql/data
    restart: always
    depends_on:
      - redis
      - geoserver

  redis:
    image: redis:7.4
    ports:
      - "6379:6379"
    expose:
      - "6379"
    env_file:
      - .fastdb.env
    restart: always
    volumes:
      - redis_data:/data 

  celery:
    build:
      context: ./fast_backend
      dockerfile: Dockerfile
    image: celery:latest
    volumes:
      - ./fast_backend:/home/app:z 
    depends_on:
      - redis
      - fast_backend
      - geoserver
    command:  
      - /bin/sh
      - -c
      - |
        celery -A app.conf.celery  worker --loglevel=info -c 8 --pool=prefork --max-tasks-per-child=50
    env_file:
      - .fastdb.env
   
  # flower:
  #   build:
  #     context: ./fast_backend
  #     dockerfile: Dockerfile
  #   image: flower:latest
  #   command: celery --broker=redis://redis:6379/0 flower --port=5555
  #   ports:
  #     - 5556:5555
  #   env_file:
  #     - .env
  #   depends_on:
  #     - redis
  #     - celery
  #     - geoserver
  #   expose:
  #     - 5556

  geoserver:
    image: kartoza/geoserver:latest
    ports:
      - "9090:8080"
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
      - ./backend/media:/opt/geoserver/medias
    environment:
      ENABLE_CORS: "true"
      CORS_ENABLED: "true"
      CORS_ALLOWED_ORIGINS: http://localhost:3000
      CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE,HEAD,OPTIONS
      CORS_ALLOWED_HEADERS: "*"
      TOMCAT_EXTRAS: "true"
      HTTP_MAX_HEADER_SIZE: 33554432
      GEOSERVER_ADMIN_USER: admin
      GEOSERVER_ADMIN_PASSWORD: geoserver
    env_file:
      - .env
    restart: always
 

volumes:
  postgres_data:
  postgres_cloud_data:
  geoserver_data:
  redis_data:
